diff -Naur a/block.c b/block.c
--- a/block.c
+++ b/block.c
@@ -483,8 +483,26 @@
 static struct probe_info* _probe_path(char *path)
 {
 	struct probe_info *pr;
-	char tmppath[64];
-
+//we used ubifs?bug!!!
+	char tmppath[64],result[64];
+	if (path[5] == 'm' && path[6] == 't' && path[7] == 'd' && path[13] >= '1' && path[14] <= '9' )
+	{
+		//list_for_each_entry(pr, &devices, list)
+		//if (!strcasecmp(pr->type, "ubifs"))
+		//		return NULL;
+		snprintf(tmppath, sizeof(tmppath), "/sys/devices/virtual/mtd/mtd%s/name", path + 13);
+		FILE* fp = fopen (tmppath, "r");
+		if (fp)
+		{
+			if (fgets(result, sizeof(result), fp)!= NULL)
+			{
+				if (strstr(result,"data_vol"))
+					return NULL;
+			}
+			fclose(fp);
+		}
+	}
+	
 	/* skip ubi device if ubiblock device is present */
 	if (path[5] == 'u' && path[6] == 'b' && path[7] == 'i' &&
 	    path[8] >= '0' && path[8] <= '9' ) {
--- a/mount_root.c
+++ b/mount_root.c
@@ -31,7 +31,7 @@
 start(int argc, char *argv[1])
 {
 	struct volume *root;
-	struct volume *data = volume_find("rootfs_data");
+	struct volume *data = volume_find("data_vol");
 	struct stat s;
 
 	if (!getenv("PREINIT") && stat("/tmp/.preinit", &s))
@@ -101,7 +101,7 @@
 static int
 done(int argc, char *argv[1])
 {
-	struct volume *v = volume_find("rootfs_data");
+	struct volume *v = volume_find("data_vol");
 
 	if (!v)
 		return -1;
--- a/jffs2reset.c
+++ b/jffs2reset.c
@@ -119,7 +119,7 @@
 		return -1;
 	}
 
-	v = volume_find("rootfs_data");
+	v = volume_find("data_vol");
 	if (!v) {
 		ULOG_ERR("MTD partition 'rootfs_data' not found\n");
 		return -1;
--- a/libfstools/rootdisk.c
+++ b/libfstools/rootdisk.c
@@ -126,7 +126,7 @@
 	struct squashfs_super_block sb;
 	struct rootdev_volume *p;
 
-	if (strcmp(name, "rootfs_data") != 0)
+	if (strcmp(name, "data_vol") != 0)
 		return NULL;
 
 	if (!rootdev)
@@ -148,7 +148,7 @@
 
 	p = calloc(1, sizeof(*p));
 	p->v.drv = &rootdisk_driver;
-	p->v.name = "rootfs_data";
+	p->v.name = "data_vol";
 
 	p->offset = le64_to_cpu(sb.bytes_used);
 	p->offset = ((p->offset + (ROOTDEV_OVERLAY_ALIGN - 1)) &
